<Application x:Class="HistoryMuseum.MVVM.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="AllowsTransparency" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="ResizeMode" Value="CanMinimize"/>
            <Setter Property="WindowStyle" Value="None"/>
        </Style>

        <!--按钮样式-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#002B2B2B"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Black"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FF0088CC"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FF2D3E5C"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#00000000"/>
        <SolidColorBrush x:Key="Button.Danger.MouseOver.Background" Color="#FFD44027"/>
        <SolidColorBrush x:Key="Button.Danger.Pressed.Background" Color="#FF9E2814"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Black"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--普通按钮-->
        <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="FontFamily" Value="Microsoft YaHei UI Light"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderThickness"  TargetName="border" Value="1,1,1,1"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF0088CC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--危险按钮-->
        <Style x:Key="DangerButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Danger.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Danger.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--标签页选项-->
        <SolidColorBrush x:Key="TabItem.Static.Background" Color="#007ACC"/>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="White"/>
        <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="#7F5D5D5D" />
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="White"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#2B2B2B"/>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0">
                                <Border x:Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<SnippetVerticalHIC>-->
        <Style x:Key="VerticalHIC"
         TargetType="{x:Type HeaderedItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedItemsControl}">
                        <StackPanel Margin="20">
                            <ContentPresenter Grid.Row="0"
                              Margin="8,20,0,0"
                              TextBlock.Foreground="#65A"
                              TextBlock.FontFamily="Trebuchet MS"
                              TextBlock.FontSize="14px"
                              TextBlock.FontWeight="Bold"
                              ContentSource="Header" />
                            <StackPanel IsItemsHost="True"
                        Orientation="Vertical"
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--</SnippetVerticalHIC>-->
        <!--<SnippetHorizontalHIC>-->
        <Style x:Key="HorizontalHIC"
         TargetType="{x:Type HeaderedItemsControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type HeaderedItemsControl}">
                        <StackPanel Margin="20">
                            <ContentPresenter Grid.Row="0"
                              Margin="8,20,0,0"
                              TextBlock.Foreground="#65A"
                              TextBlock.FontFamily="Trebuchet MS"
                              TextBlock.FontSize="14px"
                              TextBlock.FontWeight="Bold"
                              ContentSource="Header" />
                            <StackPanel IsItemsHost="True"
                        Orientation="Horizontal"
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center" />
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--</SnippetHorizontalHIC>-->

        <!--<SnippetResources>-->
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                       EndPoint="0.5,1"
                       StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                  Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                  Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                  Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                       StartPoint="0,0"
                       EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                      Offset="0" />
                    <GradientStop Color="#600000FF"
                      Offset="0.4" />
                    <GradientStop Color="#600000FF"
                      Offset="0.6" />
                    <GradientStop Color="#000000FF"
                      Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <!--</SnippetResources>-->
        <!--<SnippetSlider>-->
        <Style x:Key="SliderButtonStyle"
         TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="IsTabStop"
            Value="false" />
            <Setter Property="Focusable"
            Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<SnippetThumb>-->
        <Style x:Key="VolSliderThumbStyle"
         TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="Height"
            Value="6" />
            <Setter Property="Width"
            Value="6" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                   StrokeThickness="1">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderThumbStyle"
         TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Setter Property="Height"
            Value="10" />
            <Setter Property="Width"
            Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse"
                   StrokeThickness="1">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                  Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                  Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                  Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                           Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--</SnippetThumb>-->

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="HorizontalSlider"
                   TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                       MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
               SnapsToDevicePixels="True"
               Placement="Top"
               Height="4"
               Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
              Margin="0"
              CornerRadius="0"
              Height="3"
              Grid.Row="1"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
             x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
               SnapsToDevicePixels="True"
               Grid.Row="2"
               Fill="{TemplateBinding Foreground}"
               Placement="Bottom"
               Height="4"
               Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
               Value="TopLeft">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="BottomRight">
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="Both">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!--Template when the orientation of the Slider is Horizontal.-->
        <ControlTemplate x:Key="VolSliderTemplate"
                   TargetType="{x:Type Slider}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                       MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
               SnapsToDevicePixels="True"
               Placement="Top"
               Height="4"
               Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>
                <Border x:Name="TrackBackground"
              Margin="0"
              CornerRadius="0"
              Height="1"
              Grid.Row="1"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Row="1"
             x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource VolSliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
               SnapsToDevicePixels="True"
               Grid.Row="2"
               Fill="{TemplateBinding Foreground}"
               Placement="Bottom"
               Height="4"
               Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
               Value="TopLeft">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="BottomRight">
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="Both">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>



        <!--Template when the orientation of the Slider is Vertical.-->
        <ControlTemplate x:Key="VerticalSlider"
                   TargetType="{x:Type Slider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto"
                          MinWidth="{TemplateBinding MinWidth}" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
               SnapsToDevicePixels="True"
               Placement="Left"
               Width="4"
               Visibility="Collapsed">
                    <TickBar.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </TickBar.Fill>
                </TickBar>

                <Border x:Name="TrackBackground"
              Margin="0"
              CornerRadius="2"
              Width="4"
              Grid.Column="1"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="1,0">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0.0" />
                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush EndPoint="1,0"
                               StartPoint="0.25,0">
                            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="0" />
                            <GradientStop Color="{DynamicResource SliderTrackDarkColor}"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <Track Grid.Column="1"
             x:Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumbStyle}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <TickBar x:Name="BottomTick"
               SnapsToDevicePixels="True"
               Grid.Column="2"
               Fill="{TemplateBinding Foreground}"
               Placement="Right"
               Width="4"
               Visibility="Collapsed" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TickPlacement"
               Value="TopLeft">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="BottomRight">
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
                <Trigger Property="TickPlacement"
               Value="Both">
                    <Setter TargetName="TopTick"
                Property="Visibility"
                Value="Visible" />
                    <Setter TargetName="BottomTick"
                Property="Visibility"
                Value="Visible" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style  x:Key="progressSlider" TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
               Value="Horizontal">
                    <Setter Property="MinWidth"
                Value="104" />
                    <Setter Property="MinHeight"
                Value="21" />
                    <Setter Property="Template"
                Value="{StaticResource HorizontalSlider}" />
                </Trigger>
                <Trigger Property="Orientation"
               Value="Vertical">
                    <Setter Property="MinWidth"
                Value="21" />
                    <Setter Property="MinHeight"
                Value="104" />
                    <Setter Property="Template"
                Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="VolSlider" TargetType="{x:Type Slider}">
            <Setter Property="SnapsToDevicePixels"
            Value="true" />
            <Setter Property="OverridesDefaultStyle"
            Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
               Value="Horizontal">
                    <Setter Property="MinWidth"
                Value="60" />
                    <Setter Property="MinHeight"
                Value="21" />
                    <Setter Property="Template"
                Value="{StaticResource VolSliderTemplate}" />
                </Trigger>
                <Trigger Property="Orientation"
               Value="Vertical">
                    <Setter Property="MinWidth"
                Value="21" />
                    <Setter Property="MinHeight"
                Value="104" />
                    <Setter Property="Template"
                Value="{StaticResource VerticalSlider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--</SnippetSlider>-->

    </Application.Resources>
</Application>

